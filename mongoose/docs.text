Connecting to MongoDB

const mongoose=require("mongoose");

const mongoose = require('mongoose');

mongoose.connect('mongodb://127.0.0.1:27017/myapp')
  .then(() => console.log("MongoDB connected"))
  .catch((err) => console.error(err));



const userSchema = new mongoose.Schema({
  username: { type: String, required: true, unique: true },
  full_name: String,
  gender: { type: String, enum: ['Male', 'Female'] },
  age: Number,
  isActive: { type: Boolean, default: true },
});

Creating a Model
const User = mongoose.model('User', userSchema);



CRUD

CREATE

const newUser = new User({
  username: 'anish123',
  full_name: 'Anish Kumar',
  gender: 'Male',
  age: 22
});

newUser.save()
  .then(data => console.log(data))
  .catch(err => console.error(err));
 OR 
 await User.create({ username: "x", age: 25 });


Read

const users = await User.find(); // all users
const one = await User.findOne({ username: "anish123" });
const byId = await User.findById("mongodb_id_here");

Update

await User.updateOne({ username: "anish123" }, { age: 30 });
await User.findByIdAndUpdate(id, { isActive: false }, { new: true });

DELETE

await User.deleteOne({ username: "anish123" });
await User.findByIdAndDelete(id);



VALIDATE

const schema = new mongoose.Schema({
  email: {
    type: String,
    required: true,
    validate: {
      validator: (v) => v.includes("@"),
      message: "Invalid email format"
    }
  }
});
